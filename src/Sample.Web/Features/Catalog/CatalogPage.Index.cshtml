@model Sample.Models.ViewModels.CatalogViewModel
@using EPiServer.Web.Mvc.Html

<div class="container mx-auto">
    
    @if (Model?.ProductDetailViewModel != null)
    {
        @if (Model.ProductDetailViewModel.CatalogPage.BreadCrumbs?.Any() ?? false)
        {
            <section class="py-4">
                <div class="mx-auto px-4">
                    <ol class="inline-flex flex-wrap text-gray-600 space-x-1 md:space-x-3 items-center">
                        @foreach (var breadCrumb in Model.ProductDetailViewModel.CatalogPage.BreadCrumbs.Where(x => !string.IsNullOrEmpty(x.Url)))
                        {
                            <li class="inline-flex items-center">
                                <a class="text-gray-600 hover:text-blue-600" href="@($"/{Model.CurrentContent.Language.Name}{breadCrumb.Url}")">@breadCrumb.Text</a>
                                @if (!breadCrumb.CategoryId.Equals(Model.ProductDetailViewModel.CatalogPage.BreadCrumbs.Where(x => !string.IsNullOrEmpty(x.Url)).Last().CategoryId))
                                {
                                    <i class="ml-3 text-gray-400 fa fa-chevron-right"></i>
                                }
                            </li>
                        }
                    </ol>
                </div>
            </section>
        }
        @Html.PropertyFor(x => x.CurrentContent.MainBody)
        @Html.PropertyFor(x => x.CurrentContent.MainContentArea)
        @await Html.PartialAsync("ProductDetail", Model.ProductDetailViewModel)
    }
    else
    {
        @if (Model.ProductListViewModel?.CatalogPage?.BreadCrumbs?.Any() ?? false)
        {
            <section class="py-4">
                <div class="mx-auto px-4">
                    <ol class="inline-flex flex-wrap text-gray-600 space-x-1 md:space-x-3 items-center">
                        @foreach (var breadCrumb in Model.ProductListViewModel.CatalogPage.BreadCrumbs.Where(x => !string.IsNullOrEmpty(x.Url)))
                        {
                            <li class="inline-flex items-center">
                                <a class="text-gray-600 hover:text-blue-600" href="@($"/{Model.CurrentContent.Language.Name}{breadCrumb.Url}")">@breadCrumb.Text</a>
                                @if (!breadCrumb.CategoryId.Equals(Model.ProductListViewModel.CatalogPage.BreadCrumbs.Where(x => !string.IsNullOrEmpty(x.Url)).Last().CategoryId))
                                {
                                    <i class="ml-3 text-gray-400 fa fa-chevron-right"></i>
                                }
                            </li>
                        }
                    </ol>
                </div>
            </section>
        }
        @Html.PropertyFor(x => x.CurrentContent.MainBody)
        @Html.PropertyFor(x => x.CurrentContent.MainContentArea)
        @if (Model.ProductListViewModel?.Category != null)
        {
            @await Html.PartialAsync("PLPBannerImage", Model.ProductListViewModel.Category)
        }
        @await Html.PartialAsync("ProductList", (Model.ProductListViewModel ?? new ProductListViewModel()))
    }
</div>


