@using EPiServer.Web.Mvc.Html
@using EPiServer.Shell.Web.Mvc.Html
@model Sample.Models.ViewModels.CheckoutPageViewModel

<section x-data="{ showEditAddress: false  }" class="py-10 bg-gray-50">
    <div class="container max-w-screen-xl mx-auto px-4">
        @Html.PropertyFor(x => x.CurrentContent.MainContentArea)
        @Html.PropertyFor(x => x.CurrentContent.MainBody)
        <div class="flex flex-col md:flex-row gap-4 lg:gap-8">
            <main class="md:w-2/3">
                <article class="border border-gray-200 bg-white shadow-sm rounded p-4 lg:p-6 mb-5">
                    @await Html.PartialAsync("_Fullfilment", Model)
                </article> <!-- card.// -->

                <article class="border border-gray-200 bg-white shadow-sm rounded p-4 lg:p-6 mb-5">
                    <div class="flex justify-between">
                        <h2 class="text-xl font-semibold">@Model.CurrentContent.BillingAddressDescriptionLabel</h2>
                    </div>
                     @await Html.PartialAsync("_EditAddress")
                    <div class="grid sm:grid-cols-3 gap-3 mb-6">
                        @foreach (var address in Model.Addresses?.BillTos ?? new List<BillTo>())
                        {
                            <label class="flex p-3 border border-gray-200 rounded-md bg-gray-50 hover:border-blue-400 hover:bg-blue-50 cursor-pointer">
                                <span>
                                    @if((Model.Cart.BillTo?.Id.ToString() ?? "").Equals(address.Id.ToString()))
                                    {
                                        <input name="billingAddress" checked="checked" type="radio" class="actionSelectBillTo h-4 w-4 mt-1"/>
                                    }
                                    else
                                    {
                                        <input name="billingAddress" type="radio" class="actionSelectBillTo h-4 w-4 mt-1"/>
                                    }
                                </span>
                                <p class="ml-2">
                                    <span>@address.Label</span>
                                    <small class="block text-sm text-gray-400">@address.FullAddress</small>
                                </p>
                            </label>
                        }
                    </div>

                    <div class="flex justify-between">
                        <h2 class="text-xl font-semibold">@Model.CurrentContent.ShipToDescriptionLabel</h2>
                    </div>
                    <div class="grid sm:grid-cols-3 gap-3 mb-6">
                        @foreach (var address in Model.Cart.BillTo?.ShipTos ?? new List<ShipTo>())
                        {
                            <label class="actionSelectBillinTo flex p-3 border border-gray-200 rounded-md bg-gray-50 hover:border-blue-400 hover:bg-blue-50 cursor-pointer">
                                <span>
                                    @{
                                        var addressId = address.Id;
                                        if (address.Label.Equals("Create New Address"))
                                        {
                                            addressId = "NewSaved";
                                        }
                                        else if (address.Label.Equals("Ship to One-Time Address"))
                                        {
                                            addressId = "OneTime";
                                        }
                                    }
                                    @if((Model.Cart.ShipTo?.Id.ToString() ?? "").Equals(address.Id.ToString()))
                                    {
                                        <input data-addressId="@addressId" name="shippingAddress" checked="checked" type="radio" class="actionSelectShipTo h-4 w-4 mt-1"/>
                                    }
                                    else if (address.Label.Equals("Create New Address"))
                                    {
                                        <input @@click="window.CreateShipTo(); showEditAddress = true;" data-addressId="@addressId" name="shippingAddress" type="radio" class="h-4 w-4 mt-1"/>
                                    }
                                    else if (address.Label.Equals("Ship to One-Time Address"))
                                    {
                                        <input @@click="showEditAddress = true" data-addressId="@addressId" name="shippingAddress" type="radio" class="h-4 w-4 mt-1"/>
                                    }
                                    else
                                    {
                                        <input data-addressId="@addressId" name="shippingAddress" type="radio" class="actionSelectShipTo h-4 w-4 mt-1"/>
                                    }
                                </span>
                                <p class="ml-2">
                                    <span>@address.Label</span>
                                    <small class="block text-sm text-gray-400">@address.FullAddress</small>
                                </p>
                            </label>
                        }
                    </div>
                    <div class="flex flex-auto">
                        <h3>Order Notes</h3>
                        <textarea rows="4"
                                class="actionChechoutNotes appearance-none border border-gray-200 bg-gray-100 rounded-md hover:border-gray-400 focus:outline-none focus:border-gray-400 w-full"
                                placeholder="Type here">
                                @Model.Cart.Notes
                        </textarea>
                    </div>
                </article> <!-- card.// -->

            </main>
            <aside class="md:w-1/3">

                <article class="text-gray-600" style="max-width: 350px">

                    @await Html.PartialAsync("_OrderTotals", Model)

                    <hr class="my-4">

                    <h2 class="text-lg font-semibold mb-3">Items in cart</h2>
                    @foreach (var line in Model.Cart.CartLines)
                    {
                         <figure class="flex items-center mb-4 leading-5">
                            <div>
                                <div class="block relative w-20 h-20 rounded p-1 border border-gray-200">
                                    <img width="70" height="70" src="@line.SmallImagePath" alt="@line.AltText">
                                    <span class="absolute -top-2 -right-2 w-6 h-6 text-sm text-center flex items-center justify-center text-white bg-gray-400 rounded-full"> 
                                        @(line.QtyOrdered.Value.ToString("f0") ?? "1")
                                    </span>
                                </div>
                            </div>
                            <figcaption class="ml-3">
                                <p> @line.ShortDescription </p>
                                <p class="mt-1 text-gray-400"> Total: @line.Pricing.ExtendedUnitNetPriceDisplay </p>
                            </figcaption>
                        </figure>
                    }
                    <a class="px-4 py-3 mb-2 inline-block text-lg w-full text-center font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700"
                           href="@(Html.GetPageReferenceUrl<PageReferenceSettings>(x => x.ChecoutPage) + "?step=payment")"> @Model.CurrentContent.ContinueButtonText </a>
                </article>
            </aside> 
        </div> 
    </div> 
</section>
