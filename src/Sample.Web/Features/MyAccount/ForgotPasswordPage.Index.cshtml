@model Sample.Models.ViewModels.ForgotPasswordPageViewModel

<div class="container">
    @Html.PropertyFor(x => x.CurrentContent.MainBody)
    @Html.PropertyFor(x => x.CurrentContent.MainContentArea)
    <div class="page-content" role="main">
        <div class="ui-lock use-fastclick"></div>
        <div class="cms-rearrangeable">
            <div class="row main-row">
                <div class="col-12">
                    <h1 class="block-heading secondary heading-lg text-md-right text-capitalize font-weight-normal mb-10" @Html.EditAttributes(x => x.CurrentContent.MetaTitle)><span>@Html.PropertyFor(x => x.CurrentContent.MetaTitle)</span></h1>
                    <div style="height:50px" @Html.EditAttributes(x => x.CurrentContent.PreMessage)>@Html.PropertyFor(x => x.CurrentContent.PreMessage)</div>
                    <div class="row">
                        <div class="col-lg-7">
                            @using (Html.BeginForm("Index", "ForgotPasswordPage", new { ReturnUrl = "/" }, FormMethod.Post,true, new { id = "forgotPasswordForm", role = "form" }))
                            {
                                if (!Model.IsPasswordReset)
                                {
                                    @Html.AntiForgeryToken()
                                    if (Model.ErrorMessage.Count() > 0)
                                    {
                                        <div class="validation-summary-error-side">
                                            @foreach (var error in Model.ErrorMessage)
                                            {
                                                <div class="row error-row">
                                                    <span class="icon-exclamation-solid"></span>
                                                    <span class="err-message">@error</span>
                                                </div>
                                            }
                                        </div>
                                    }
                                    <div class="row">
                                        <div class="col-md-4">
                                            <label for="ForgotPasswordViewModel_Username">@Html.PropertyFor(x => x.CurrentContent.UserNameLabel)</label><span class="redTxt">*</span>
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(x => x.ForgotPasswordViewModel.Username, new { autofocus = "autofocus", placeholder = "Username" })
                                            @Html.SampleValidationMessageFor(x => x.ForgotPasswordViewModel.Username)
                                        </div>
                                    </div>

                                    <div class="btns">
                                        <a href="@Model.ReturnToSignInButtonLink" class="btn btn-primary">@Html.PropertyFor(x => x.CurrentContent.ReturnToSignInButtonText)</a>
                                        <button type="submit" class="btn btn-primary">@Html.PropertyFor(x => x.CurrentContent.SendButtonText)</button>
                                    </div>
                                }
                                if (Model.IsPasswordReset)
                                {
                                    <div>
                                        <div style="text-align:justify" @Html.EditAttributes(x => x.CurrentContent.PostMessage)>@Html.PropertyFor(x => x.CurrentContent.PostMessage)</div>
                                    </div>
                                    <div class="btns">
                                        <a href="@Model.CloseButtonLink" class="btn btn-primary">@Html.PropertyFor(x => x.CurrentContent.CloseButtonText)</a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>